@using Entity.DTO.Role
@using Entity.DTO.RoleAuthorization
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    
    var roles = Model.Roles;
    List<string> headsRole = new List<string>();
    List<object> datasRole = new List<object>();

    foreach (var item in typeof(ListRoleDTO).GetProperties())
    {
        headsRole.Add(item.CustomAttributes.First().ConstructorArguments.First().Value.ToString());
    }

    foreach (var item in roles)
    {
        datasRole.Add(item);
    }

    var auths = Model.Auths;
    List<string> headsAuth = new List<string>();
    List<object> datasAuth = new List<object>();


    foreach (var item in typeof(ListAuthorizationDTO).GetProperties())
    {
        headsAuth.Add(item.CustomAttributes.First().ConstructorArguments.First().Value.ToString());
    }

    foreach (var item in auths)
    {
        datasAuth.Add(item);
    }

    AddRoleDTO addRoleDTO = new AddRoleDTO();

    EditRoleDTO editRoleDTO = new EditRoleDTO();
    editRoleDTO.Name = "Tester";

    AddAuthorizationDTO addAuthorizationDTO = new AddAuthorizationDTO();

    EditAuthorizationDTO editAuthorizationDTO = new EditAuthorizationDTO();
    editAuthorizationDTO.Name = "Tamemen Sil";

    // todo: Rol eklerken veya güncellerken o rolün sahip olduğu yetkilere de müdahale edilmeli. Şuanlık bu yok, eklenecek.
}

<div class="container-fuild p-5">
    <div id="accordion" class="mb-5">
        <div class="card">
            <div class="card-header" id="headingOne">
                <h5 class="mb-0">
                    <a class="btn btn-light" data-toggle="collapse" data-target="#cauthindex1" aria-expanded="true" aria-controls="cauthindex1" role="button">Roller</a>
                    <button type="button" class="btn btn-outline-success ml-3" id="myInput" data-bs-toggle="modal" data-bs-target="#addRole">
                        <i class="fa fa-plus"></i>
                    </button>
                </h5>
            </div>
            <div id="cauthindex1" class="collapse show p-3" aria-labelledby="headingTwo" data-parent="#accordion">
                <div class="p-3" style="border:2px solid gray; border-radius: .35rem;">
                    @await Component.InvokeAsync("BaseTable",
                    new{
                    TableID = "myTable1",
                    EditIsModal = true,
                    EditBtnModalID = "editRole",
                    EditBtnController="",
                    EditBtnAction="",
                    DeleteBtnModalID="deleteRole",
                    TableHeads=headsRole,
                    TableDatas=datasRole
                    })
                </div>
            </div>
        </div>
    </div>
    <div id="accordion">
        <div class="card">
            <div class="card-header" id="headingOne">
                <h5 class="mb-0">
                    <a class="btn btn-light" data-toggle="collapse" data-target="#cauthindex2" aria-expanded="true" aria-controls="cauthindex2" role="button">Yetkiler</a>
                    <button type="button" class="btn btn-outline-success ml-3" id="myInput" data-bs-toggle="modal" data-bs-target="#addAuthorization">
                        <i class="fa fa-plus"></i>
                    </button>
                </h5>
            </div>
            <div id="cauthindex2" class="collapse show p-3" aria-labelledby="headingTwo" data-parent="#accordion">
                <div class="p-3" style="border:2px solid gray; border-radius: .35rem;">         
                    @await Component.InvokeAsync("BaseTable",
                    new{
                    TableID = "myTable2",
                    EditIsModal = true,
                    EditBtnModalID = "editAuthorization",
                    EditBtnController="",
                    EditBtnAction="",
                    DeleteBtnModalID="deleteAuthorization",
                    TableHeads=headsAuth,
                    TableDatas=datasAuth
                    })
                </div>
            </div>
        </div>
    </div>
</div>

@await Component.InvokeAsync("DeleteModal", new{title = "Yetki Sil", body="Yetkiyi silmek istediğinize emin misiniz?", id="deleteAuthorization"})
@await Component.InvokeAsync("DeleteModal", new{title = "Rol Sil", body="Rolü silmek istediğinize emin misiniz?", id="deleteRole"})
@await Component.InvokeAsync("ActivationModal", new{title = "Yetki Aktif Et", body="Yetkiyi aktif hale getirmek istediğinize emin misiniz?", id="activation"})
@await Component.InvokeAsync("AddModal", new{ModalID = "addRole",modalTitle = "Yeni Rol Ekle", dto = addRoleDTO})
@await Component.InvokeAsync("EditModal", new {modalID="editRole", modalTitle="Rol Güncelle",dto=editRoleDTO})
@await Component.InvokeAsync("AddModal", new{ModalID = "addAuthorization",modalTitle = "Yeni Yetki Ekle", dto = addAuthorizationDTO})
@await Component.InvokeAsync("EditModal", new {modalID="editAuthorization", modalTitle="Yetki Güncelle",dto=editAuthorizationDTO})
